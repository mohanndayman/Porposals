import {
  StyleSheet,
  Dimensions,
  Platform,
  StatusBar,
  I18nManager,
} from "react-native";
import COLORS from "../constants/colors";

const { width, height } = Dimensions.get("window");
const CARD_WIDTH = width - 48;
const CARD_HEIGHT = height * 0.7;

const createStyles = (isRTL = I18nManager.isRTL) =>
  StyleSheet.create({
    container: {
      flex: 1,
      backgroundColor: COLORS.background,
    },
    header: {
      width: "100%",
      position: "absolute",
      top: 0,
      overflow: "hidden",
      zIndex: 100,
    },
    headerGradient: {
      flex: 1,
      paddingTop: Platform.OS === "ios" ? 50 : StatusBar.currentHeight + 10,
    },
    headerContent: {
      paddingTop: 10,
      flexDirection: isRTL ? "row-reverse" : "row",
      alignItems: "center",
      justifyContent: "space-between",
      paddingHorizontal: 20,
      paddingBottom: 15,
    },
    headerTitle: {
      fontSize: 34,
      fontWeight: "700",
      color: COLORS.white,
      textAlign: isRTL ? "right" : "left",
    },
    filterButton: {
      width: 40,
      height: 40,
      borderRadius: 20,
      backgroundColor: "rgba(255, 255, 255, 0.2)",
      alignItems: "center",
      justifyContent: "center",
    },
    filtersPanel: {
      position: "absolute",
      top: Platform.OS === "ios" ? 120 : 100,
      left: 0,
      right: 0,
      zIndex: 99,
      overflow: "hidden",
      backgroundColor: COLORS.primary,
    },
    filtersList: {
      padding: 20,
    },
    filtersTitle: {
      fontSize: 24,
      fontWeight: "700",
      color: COLORS.white,
      marginBottom: 20,
      textAlign: isRTL ? "right" : "left",
    },
    filterSection: {
      marginBottom: 20,
    },
    filterSectionTitle: {
      fontSize: 16,
      fontWeight: "600",
      color: COLORS.white,
      marginBottom: 10,
      textAlign: isRTL ? "right" : "left",
    },
    scrollView: {
      flex: 1,
      marginTop: Platform.OS === "ios" ? 120 : 100,
    },
    content: {
      padding: 20,
    },
    filterContainer: {
      marginBottom: 20,
    },
    filterScroll: {
      paddingRight: isRTL ? 0 : 20,
      paddingLeft: isRTL ? 20 : 0,
      gap: 12,
    },
    filterChip: {
      flexDirection: isRTL ? "row-reverse" : "row",
      alignItems: "center",
      paddingHorizontal: 16,
      paddingVertical: 8,
      borderRadius: 20,
      backgroundColor: COLORS.white,
      gap: 8,
      shadowColor: COLORS.text,
      shadowOffset: {
        width: 0,
        height: 2,
      },
      shadowOpacity: 0.1,
      shadowRadius: 8,
      elevation: 4,
      overflow: "hidden",
    },
    filterChipActive: {
      backgroundColor: "transparent",
    },
    filterChipText: {
      fontSize: 14,
      fontWeight: "600",
      color: COLORS.text,
    },
    filterChipTextActive: {
      color: COLORS.white,
    },
    spotlightSection: {
      marginBottom: 30,
    },
    sectionHeader: {
      flexDirection: isRTL ? "row-reverse" : "row",
      alignItems: "center",
      justifyContent: "space-between",
      marginBottom: 16,
    },
    sectionHeaderRight: {
      flexDirection: isRTL ? "row-reverse" : "row",
      alignItems: "center",
    },
    percentageContainer: {
      marginRight: isRTL ? 0 : 10,
      marginLeft: isRTL ? 10 : 0,
      backgroundColor: "rgba(0, 0, 0, 0.05)",
      paddingHorizontal: 8,
      paddingVertical: 4,
      borderRadius: 12,
    },
    percentageText: {
      fontSize: 12,
      fontWeight: "500",
      color: COLORS.primary,
    },
    sectionTitle: {
      fontSize: 20,
      fontWeight: "700",
      color: COLORS.text,
      textAlign: isRTL ? "right" : "left",
    },
    seeAllButton: {
      fontSize: 14,
      fontWeight: "600",
      color: COLORS.primary,
    },
    spotlightScroll: {
      paddingRight: isRTL ? 0 : 20,
      paddingLeft: isRTL ? 20 : 0,
      gap: 16,
    },
    spotlightCard: {
      width: CARD_WIDTH * 0.8,
      height: CARD_HEIGHT * 0.6,
      borderRadius: 20,
      overflow: "hidden",
      backgroundColor: COLORS.white,
      shadowColor: COLORS.text,
      shadowOffset: {
        width: 0,
        height: 8,
      },
      shadowOpacity: 0.15,
      shadowRadius: 16,
      elevation: 8,
    },
    spotlightImage: {
      width: "100%",
      height: "100%",
      resizeMode: "cover",
    },
    spotlightGradient: {
      position: "absolute",
      bottom: 0,
      left: 0,
      right: 0,
      height: "60%",
    },
    spotlightInfo: {
      position: "absolute",
      bottom: 0,
      left: 0,
      right: 0,
      padding: 20,
    },
    spotlightHeader: {
      marginBottom: 12,
    },
    nameVerifiedContainer: {
      flexDirection: isRTL ? "row-reverse" : "row",
      alignItems: "center",
      gap: 8,
    },
    spotlightName: {
      fontSize: 20,
      fontWeight: "700",
      color: COLORS.white,
      textAlign: isRTL ? "right" : "left",
    },
    spotlightLocation: {
      fontSize: 14,
      color: COLORS.white,
      opacity: 0.8,
      textAlign: isRTL ? "right" : "left",
    },
    verifiedBadge: {
      width: 20,
      height: 20,
      borderRadius: 10,
      backgroundColor: COLORS.primary,
      alignItems: "center",
      justifyContent: "center",
    },
    matchPercentageContainer: {
      flexDirection: isRTL ? "row-reverse" : "row",
      alignItems: "center",
      gap: 8,
    },
    progressMask: {
      height: 4,
      width: 100,
      backgroundColor: "rgba(255, 255, 255, 0.2)",
      borderRadius: 2,
      overflow: "hidden",
    },
    progressBar: {
      height: "100%",
      backgroundColor: "white",
    },
    progressGradient: {
      height: 4,
      width: "100%",
    },
    matchPercentage: {
      fontSize: 14,
      fontWeight: "600",
      color: COLORS.white,
    },
    premiumBadge: {
      position: "absolute",
      top: 16,
      right: isRTL ? "auto" : 16,
      left: isRTL ? 16 : "auto",
      width: 24,
      height: 24,
      borderRadius: 12,
      backgroundColor: COLORS.white,
      alignItems: "center",
      justifyContent: "center",
    },
    activeStatus: {
      position: "absolute",
      top: 16,
      left: isRTL ? "auto" : 16,
      right: isRTL ? 16 : "auto",
      flexDirection: isRTL ? "row-reverse" : "row",
      alignItems: "center",
      gap: 6,
      paddingHorizontal: 12,
      paddingVertical: 6,
      borderRadius: 12,
      backgroundColor: "rgba(0, 0, 0, 0.5)",
    },
    activeDot: {
      width: 6,
      height: 6,
      borderRadius: 3,
      backgroundColor: COLORS.success,
    },
    activeText: {
      fontSize: 12,
      color: COLORS.white,
    },
    quickMatchSection: {
      marginBottom: 20,
    },
    quickMatchGrid: {
      flexDirection: "row",
      flexWrap: "wrap",
      gap: 16,
      justifyContent: "space-between",
    },
    quickMatchCard: {
      width: (width - 56) / 2,
      height: ((width - 56) / 2) * 1.3,
      borderRadius: 16,
      overflow: "hidden",
      backgroundColor: COLORS.white,
      shadowColor: COLORS.text,
      shadowOffset: {
        width: 0,
        height: 8,
      },
      shadowOpacity: 0.15,
      shadowRadius: 16,
      elevation: 8,
    },
    quickMatchImage: {
      width: "100%",
      height: "100%",
      resizeMode: "cover",
    },
    quickMatchInfo: {
      position: "absolute",
      bottom: 0,
      left: 0,
      right: 0,
      padding: 12,
    },
    quickMatchHeader: {
      flexDirection: isRTL ? "row-reverse" : "row",
      alignItems: "baseline",
      gap: 4,
    },
    quickMatchName: {
      fontSize: 16,
      fontWeight: "600",
      color: COLORS.white,
      textAlign: isRTL ? "right" : "left",
    },
    quickMatchAge: {
      fontSize: 14,
      color: COLORS.white,
      opacity: 0.8,
    },
    quickMatchDistance: {
      fontSize: 12,
      color: COLORS.white,
      opacity: 0.8,
      textAlign: isRTL ? "right" : "left",
    },
    premiumRing: {
      position: "absolute",
      top: -2,
      left: -2,
      right: -2,
      bottom: -2,
      borderRadius: 18,
      zIndex: -1,
    },
    loaderContainer: {
      height: 200,
      justifyContent: "center",
      alignItems: "center",
    },
    applyButton: {
      marginTop: 10,
      height: 50,
      borderRadius: 25,
      overflow: "hidden",
      justifyContent: "center",
      alignItems: "center",
    },
    applyButtonText: {
      fontSize: 16,
      fontWeight: "600",
      color: COLORS.white,
    },
    resetButton: {
      marginTop: 10,
      height: 45,
      borderRadius: 22.5,
      justifyContent: "center",
      alignItems: "center",
      borderWidth: 1,
      borderColor: "rgba(255, 255, 255, 0.3)",
    },
    resetButtonText: {
      fontSize: 14,
      fontWeight: "500",
      color: COLORS.white,
    },
    ageRangeInputContainer: {
      flexDirection: isRTL ? "row-reverse" : "row",
      alignItems: "center",
      justifyContent: "space-between",
      marginTop: 8,
    },
    ageInputWrapper: {
      flex: 1,
    },
    ageInputLabel: {
      fontSize: 12,
      color: COLORS.white,
      marginBottom: 4,
      textAlign: isRTL ? "right" : "left",
    },
    ageInput: {
      height: 50,
      backgroundColor: "rgba(255, 255, 255, 0.2)",
      borderRadius: 12,
      color: COLORS.white,
      fontSize: 16,
      paddingHorizontal: 15,
      textAlign: "center",
    },
    ageSeparator: {
      width: 20,
      height: 2,
      backgroundColor: "rgba(255, 255, 255, 0.3)",
      marginHorizontal: 10,
    },
    // Empty state styles
    emptyStateContainer: {
      backgroundColor: COLORS.white,
      borderRadius: 20,
      padding: 30,
      alignItems: "center",
      justifyContent: "center",
      marginVertical: 20,
      shadowColor: COLORS.text,
      shadowOffset: {
        width: 0,
        height: 4,
      },
      shadowOpacity: 0.1,
      shadowRadius: 10,
      elevation: 5,
    },
    emptyStateIconContainer: {
      width: 80,
      height: 80,
      borderRadius: 40,
      backgroundColor: "rgba(0, 0, 0, 0.05)",
      alignItems: "center",
      justifyContent: "center",
      marginBottom: 20,
    },
    emptyStateTitle: {
      fontSize: 20,
      fontWeight: "700",
      color: COLORS.text,
      marginBottom: 10,
      textAlign: "center",
    },
    emptyStateDescription: {
      fontSize: 14,
      lineHeight: 20,
      color: COLORS.text,
      opacity: 0.7,
      textAlign: "center",
    },
    cardLikeButton: {
      position: "absolute",
      bottom: 16,
      right: isRTL ? "auto" : 16,
      left: isRTL ? 16 : "auto",
      width: 44,
      height: 44,
      borderRadius: 22,
      backgroundColor: COLORS.primary,
      alignItems: "center",
      justifyContent: "center",
      shadowColor: "#000",
      shadowOffset: { width: 0, height: 2 },
      shadowOpacity: 0.25,
      shadowRadius: 3.84,
      elevation: 5,
    },
    cardLikedIndicator: {
      position: "absolute",
      bottom: 16,
      right: isRTL ? "auto" : 16,
      left: isRTL ? 16 : "auto",
      width: 44,
      height: 44,
      borderRadius: 22,
      backgroundColor: "rgba(0, 0, 0, 0.5)",
      alignItems: "center",
      justifyContent: "center",
    }, // Add these to your createStyles function in styles/matches.js
    noFiltersContainer: {
      alignItems: "center",
      justifyContent: "center",
      paddingVertical: 40,
      paddingHorizontal: 24,
    },
    noFiltersIconContainer: {
      width: 100,
      height: 100,
      borderRadius: 50,
      backgroundColor: "rgba(74, 111, 161, 0.1)",
      alignItems: "center",
      justifyContent: "center",
      marginBottom: 24,
    },
    noFiltersTitle: {
      fontSize: 22,
      fontWeight: "700",
      color: COLORS.text,
      marginBottom: 12,
      textAlign: "center",
    },
    noFiltersDescription: {
      fontSize: 16,
      color: "#666",
      textAlign: "center",
      marginBottom: 30,
      lineHeight: 24,
    },
    noFiltersButton: {
      flexDirection: "row",
      alignItems: "center",
      justifyContent: "center",
      paddingVertical: 14,
      paddingHorizontal: 24,
      borderRadius: 12,
      width: "80%",
      overflow: "hidden",
    },
    noFiltersButtonText: {
      color: "#fff",
      fontSize: 16,
      fontWeight: "600",
    },
  });

export default createStyles;

export { createStyles };
